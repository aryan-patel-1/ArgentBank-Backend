openapi: 3.0.0
info:
  title: ArgentBank Transactions API
  version: 1.0.0
  description: API pour gérer les transactions des utilisateurs

paths:
  /user/transactions:
    get:
      summary: Récupérer les transactions du mois en cours groupées par compte
      security:
        - BearerAuth: []
      parameters:
        - name: month
          in: query
          required: false
          schema:
            type: string
            example: "2025-05"
      responses:
        '200':
          description: Liste des transactions
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Transaction'
        '401':
          description: Non autorisé

    post:
      summary: Créer une nouvelle transaction
      security:
        - BearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - amount
                - description
                - accountId
              properties:
                amount:
                  type: number
                  format: float
                  example: -50.25
                description:
                  type: string
                  example: "Achat supermarché"
                category:
                  type: string
                  example: "Alimentation"
                notes:
                  type: string
                  example: "Courses hebdomadaires"
                accountId:
                  type: string
                  example: "acc_123456"
      responses:
        '201':
          description: Transaction créée
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Requête invalide
        '401':
          description: Non autorisé

  /user/transactions/{transactionId}:
    get:
      summary: Détail d'une transaction spécifique
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Détail de la transaction
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '401':
          description: Non autorisé
        '404':
          description: Transaction non trouvée

    put:
      summary: Modifier une transaction (catégorie et notes uniquement)
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                category:
                  type: string
                  example: "Alimentation"
                notes:
                  type: string
                  example: "Note mise à jour"
      security:
        - BearerAuth: []
      responses:
        '200':
          description: Transaction mise à jour
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Transaction'
        '400':
          description: Requête invalide
        '401':
          description: Non autorisé
        '404':
          description: Transaction non trouvée

    delete:
      summary: Supprimer une transaction
      parameters:
        - name: transactionId
          in: path
          required: true
          schema:
            type: string
      security:
        - BearerAuth: []
      responses:
        '204':
          description: Transaction supprimée avec succès
        '401':
          description: Non autorisé
        '403':
          description: Suppression non autorisée pour cette transaction
        '404':
          description: Transaction non trouvée

components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    Transaction:
      type: object
      properties:
        id:
          type: string
          example: "txn_001"
        amount:
          type: number
          format: float
          example: -150.75
        date:
          type: string
          format: date
          example: "2025-05-01"
        description:
          type: string
          example: "Paiement restaurant"
        category:
          type: string
          example: "Alimentation"
        notes:
          type: string
          example: "Dîner entre amis"
        accountId:
          type: string
          example: "acc_123456"
        type:
          type: string
          enum: [debit, credit]
          example: "debit"